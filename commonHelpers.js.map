{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["/* const API key = 43954842-86e0551d49d52b31999082e7b; */\n\nexport default class PixabayApi {\n  constructor() {\n    this.searchQuery = '';\n  }\n\n  //Метод класу який здійснює асинхронний запит до API Pixabay для отримання фотографій\n  async fetchPhoto() {\n    console.log(this);\n\n    //Фурмуємо параметри запиту\n    const params = new URLSearchParams({\n      key: '43954842-86e0551d49d52b31999082e7b',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: 'true',\n      q: this.searchQuery,\n    });\n    //Створюється URL для запиту\n    const url = `https://pixabay.com/api/?${params.toString()}`;\n\n    try {\n      const response = await fetch(url); //Виконується запит до API за допомогою fetch(url)\n      if (!response.ok) {\n        throw new Error('Network response was not ok'); //Якщо відповідь не успішна виводиться помилка\n      }\n      const data = await response.json(); // //Якщо відповідь успішна, повертається результат у форматі JSON\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching data from Pixabay API:', error); //Якщо під час виконання запиту виникає помилка, вона ловиться і кидається нова помилка з повідомленням про проблему.\n    }\n  }\n  //Метод класу Геттер query дозволяє отримати значення властивості searchQuery\n  get query() {\n    return this.searchQuery;\n  }\n\n  //Метод класу Сетер query який дозволяє перезаписати значення властивості searchQuery\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  //Метод класу який очищає вміст властивості searchQuery\n  reset() {\n    this.searchQuery = '';\n  }\n}\n","// Імпортуємо SimpleLightbox\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n//Створюємо новий екземпляр бібліотеки\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n//Створюємо фннкцію для розмітки карток галереї\nexport function onRenderGallery(elements, galleryContainer) {\n  if (!galleryContainer) {\n    console.error('Gallery container is undefined'); // Перевіряємо чи обєкт передано, якщо ні, то виводиться помилка\n    return;\n  }\n\n  //Формуємо розмітку для елементів галереї\n  const markup = elements\n    .map(\n      //використовуємо метод map для перетворення кожного елементу з масиву elements у HTML-розмітку\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<div class=\"photo-card\">\n    <a href=\"${largeImageURL}\">\n      <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n    </a>\n    <ul class=\"info-list\">\n      <li class=\"info-item\">\n        <b>Likes</b>\n        ${likes}\n      </li>\n      <li class=\"info-item\">\n        <b>Views</b>\n        ${views}\n      </li>\n      <li class=\"info-item\">\n        <b>Comments</b>\n        ${comments}\n      </li>\n      <li class=\"info-item\">\n        <b>Downloads</b>\n        ${downloads}\n      </li>\n    </ul>\n    </div>`;\n      }\n    )\n    .join(''); // Метод join з'єднує всі отримані рядки в один великий рядок HTML.\n  galleryContainer.insertAdjacentHTML('beforeend', markup); //Додаємо розмітку в кінець контейнера галереї, використовуючи метод insertAdjacentHTML.\n  lightbox.refresh(); //Оновлюємо галерею\n  console.log(galleryContainer);\n}\n","import './css/styles.css';\nimport PixabayApi from './js/pixabay-api';\nimport { onRenderGallery } from './js/render-functions';\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//Щголошуємо refs, та отримуємо доступ до елементів\nconst refs = {\n  searchform: document.querySelector('.search-form'),\n  galleryConteiner: document.querySelector('.gallery'),\n  loader: document.querySelector('.loader'),\n};\n\n//Створюємо новий екземпляр класу\nconst pixabayApi = new PixabayApi();\n\n//Встановлюємо прослуховувач події на форму\nrefs.searchform.addEventListener('submit', onSearch);\n\n//Функція виконує пошук зображень на основі введеного запиту\nfunction onSearch(event) {\n  event.preventDefault(); // щоб не відбувалось перезавантаження сторінка після відправлення фформи\n\n  //Отримання та обробка запиту і очищення його від пробілів\n  const query = event.currentTarget.elements.query.value.trim();\n  if (!query) {\n    return showToast('red', 'Please, fill the main field', 'topRight'); //Якщо запит порожній зявляється повідомлення про необхідність заповнити поле, і функція завершується.\n  }\n\n  //Функція для підготовки виконання пошуку\n  showLoader();\n  refs.galleryConteiner.innerHTML = ''; //Очищується контейнер галереї\n  pixabayApi.query = query; // задається новий пошуковий запит\n\n  //Викликається метод fetchPhoto для отримання фотографій з Pixabay API\n  pixabayApi\n    .fetchPhoto()\n    .then(data => {\n      //Перевіряємо кількість отриманих результатів\n      if (data.hits.length === 0) {\n        //Якщо результатів немає, зявляється повідомлення про відсутність збігів\n        showToast(\n          'red',\n          'Sorry, there are no images matching your search query. Please try again!',\n          'topRight'\n        );\n      } else {\n        //Якщо результати є, викликається функція onRenderGallery для рендерингу отриманих фотографій у контейнер галереї.\n        onRenderGallery(data.hits, refs.galleryConteiner);\n      }\n    })\n    //Якщо запит не вдалий, в консоль виводиться повідомлення про помилку\n    .catch(error => {\n      console.error('Error:', error);\n      showToast(\n        'red',\n        'An error occurred while fetching images. Please try again later.',\n        'topRight'\n      );\n    })\n    //У finally приховується індикатор завантаження і очищується форма пошуку.\n    .finally(() => {\n      hideLoader();\n      refs.searchform.reset(); // Очищуємо поле вводу\n    });\n\n  //Викликається метод reset для скидання параметрів API\n  pixabayApi.reset();\n}\n\n// Функція для виведення повідомлення\nfunction showToast(color, message) {\n  iziToast.show({\n    color: color,\n    message: message,\n    position: 'topRight',\n  });\n}\n// Функція для  показу індикатора завантаження Loader\nfunction showLoader() {\n  refs.loader.style.display = 'block';\n}\n\n// Функція для приховування індикатора завантаження Loader\nfunction hideLoader() {\n  refs.loader.style.display = 'none';\n}\n"],"names":["PixabayApi","url","response","error","newQuery","lightbox","SimpleLightbox","onRenderGallery","elements","galleryContainer","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","refs","pixabayApi","onSearch","event","query","showToast","showLoader","data","hideLoader","color","message","iziToast"],"mappings":"6vBAEe,MAAMA,CAAW,CAC9B,aAAc,CACZ,KAAK,YAAc,EACpB,CAGD,MAAM,YAAa,CACjB,QAAQ,IAAI,IAAI,EAWhB,MAAMC,EAAM,4BARG,IAAI,gBAAgB,CACjC,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,EAAG,KAAK,WACd,CAAK,EAE8C,SAAQ,CAAE,GAEzD,GAAI,CACF,MAAMC,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAG/C,OADa,MAAMA,EAAS,MAE7B,OAAQC,EAAO,CACd,MAAM,IAAI,MAAM,wCAAyCA,CAAK,CAC/D,CACF,CAED,IAAI,OAAQ,CACV,OAAO,KAAK,WACb,CAGD,IAAI,MAAMC,EAAU,CAClB,KAAK,YAAcA,CACpB,CAGD,OAAQ,CACN,KAAK,YAAc,EACpB,CACH,CCzCA,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAGM,SAASC,EAAgBC,EAAUC,EAAkB,CAC1D,GAAI,CAACA,EAAkB,CACrB,QAAQ,MAAM,gCAAgC,EAC9C,MACD,CAGD,MAAMC,EAASF,EACZ,IAEC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,eACAL,CAAa;AAAA,oCACQD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,UAKpDC,CAAK;AAAA;AAAA;AAAA;AAAA,UAILC,CAAK;AAAA;AAAA;AAAA;AAAA,UAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,UAIRC,CAAS;AAAA;AAAA;AAAA,WAKd,EACA,KAAK,EAAE,EACVR,EAAiB,mBAAmB,YAAaC,CAAM,EACvDL,EAAS,QAAO,EAChB,QAAQ,IAAII,CAAgB,CAC9B,CCrDA,MAAMS,EAAO,CACX,WAAY,SAAS,cAAc,cAAc,EACjD,iBAAkB,SAAS,cAAc,UAAU,EACnD,OAAQ,SAAS,cAAc,SAAS,CAC1C,EAGMC,EAAa,IAAInB,EAGvBkB,EAAK,WAAW,iBAAiB,SAAUE,CAAQ,EAGnD,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EAGpB,MAAMC,EAAQD,EAAM,cAAc,SAAS,MAAM,MAAM,OACvD,GAAI,CAACC,EACH,OAAOC,EAAU,MAAO,6BAAyC,EAInEC,IACAN,EAAK,iBAAiB,UAAY,GAClCC,EAAW,MAAQG,EAGnBH,EACG,WAAY,EACZ,KAAKM,GAAQ,CAERA,EAAK,KAAK,SAAW,EAEvBF,EACE,MACA,0EAEF,EAGAhB,EAAgBkB,EAAK,KAAMP,EAAK,gBAAgB,CAExD,CAAK,EAEA,MAAMf,GAAS,CACd,QAAQ,MAAM,SAAUA,CAAK,EAC7BoB,EACE,MACA,kEAEF,CACN,CAAK,EAEA,QAAQ,IAAM,CACbG,IACAR,EAAK,WAAW,OACtB,CAAK,EAGHC,EAAW,MAAK,CAClB,CAGA,SAASI,EAAUI,EAAOC,EAAS,CACjCC,EAAS,KAAK,CACZ,MAAOF,EACP,QAASC,EACT,SAAU,UACd,CAAG,CACH,CAEA,SAASJ,GAAa,CACpBN,EAAK,OAAO,MAAM,QAAU,OAC9B,CAGA,SAASQ,GAAa,CACpBR,EAAK,OAAO,MAAM,QAAU,MAC9B"}